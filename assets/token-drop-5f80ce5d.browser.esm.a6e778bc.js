var d=Object.defineProperty;var f=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>(f(s,typeof e!="symbol"?e+"":e,t),t);import{bY as C,a0 as w,a1 as W,bZ as y,a3 as R,aj as i,a4 as b,A,a5 as c,a6 as l}from"./index.a7009179.js";import{C as T,a as E,G as S,b as O}from"./contract-appuri-40843c43.browser.esm.c16d2f64.js";import{C as v}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as D}from"./contract-platform-fee-cb58dbfd.browser.esm.22b4863a.js";import{C as F}from"./contract-roles-ae3a6cc1.browser.esm.3b454ed1.js";import{C as V}from"./contract-sales-2fd43374.browser.esm.bb77c53a.js";import{D as _}from"./drop-claim-conditions-b725615a.browser.esm.09b7c335.js";import{S as B}from"./erc-20-standard-315a4927.browser.esm.9152892f.js";import"./index.27448dd6.js";import"./treeify.4f304e94.js";import"./assertEnabled-657cc6f5.browser.esm.dff1b667.js";import"./setErc20Allowance-a867cbf2.browser.esm.00fc68b3.js";import"./erc-20-c2f810ba.browser.esm.b7533988.js";const m=class extends B{constructor(t,r,a){let o=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},h=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new w(t,r,h,o,a);super(g,a,u);n(this,"claim",c((()=>{var t=this;return async function(r){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return t.claimTo.prepare(await t.contractWrapper.getSignerAddress(),r,a)}})()));n(this,"claimTo",c((()=>{var t=this;return async function(r,a){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return t.erc20.claimTo.prepare(r,a,{checkERC20Allowance:o})}})()));n(this,"delegateTo",c(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await i(t)]})));n(this,"burnTokens",c(async t=>this.erc20.burn.prepare(t)));n(this,"burnFrom",c(async(t,r)=>this.erc20.burnFrom.prepare(t,r)));this.abi=W.parse(h||[]),this.metadata=new T(this.contractWrapper,y,this.storage),this.app=new E(this.contractWrapper,this.metadata,this.storage),this.roles=new F(this.contractWrapper,m.contractRoles),this.encoder=new R(this.contractWrapper),this.estimator=new S(this.contractWrapper),this.events=new O(this.contractWrapper),this.sales=new V(this.contractWrapper),this.platformFees=new D(this.contractWrapper),this.interceptor=new v(this.contractWrapper),this.claimConditions=new _(this.contractWrapper,this.metadata,this.storage)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[await i(t)]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await i(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[b("transfer"),A])}async prepare(t,r,a){return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}};let p=m;n(p,"contractRoles",C);export{p as TokenDrop};
