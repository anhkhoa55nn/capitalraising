var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{$ as l,a0 as C,a1 as W,bJ as f,a3 as w,a4 as y,A as T,a5 as o,a6 as R}from"./index.a7009179.js";import{C as b,a as S,G as E,b as A}from"./contract-appuri-40843c43.browser.esm.c16d2f64.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as M,a as O}from"./contract-owner-28efdf8b.browser.esm.7cd2a491.js";import{C as v}from"./contract-platform-fee-cb58dbfd.browser.esm.22b4863a.js";import{C as I}from"./contract-roles-ae3a6cc1.browser.esm.3b454ed1.js";import{C as P}from"./contract-sales-2fd43374.browser.esm.bb77c53a.js";import{S as k}from"./erc-721-standard-1b7f4136.browser.esm.8a4d3dfd.js";import{a as x}from"./erc-721-f4591236.browser.esm.41bdd87a.js";import"./setErc20Allowance-a867cbf2.browser.esm.00fc68b3.js";import"./QueryParams-eb9de65f.browser.esm.65d48fdd.js";import"./index.27448dd6.js";import"./treeify.4f304e94.js";import"./assertEnabled-657cc6f5.browser.esm.dff1b667.js";import"./drop-claim-conditions-b725615a.browser.esm.09b7c335.js";const c=class extends k{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,p,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(p||[]),this.metadata=new b(this.contractWrapper,f,this.storage),this.app=new S(this.contractWrapper,this.metadata,this.storage),this.roles=new I(this.contractWrapper,c.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new P(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new v(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let i=c;e(i,"contractRoles",l);export{i as NFTCollection};
